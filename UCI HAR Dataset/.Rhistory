parse(25081985)
parse("25081985")
?parse
mdy("25081985")
dmy(25081985)
ymd(25081985)
ymd("192012")
ymd("\\192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms(dt1)
hms("03:22:14")
dt2
ymd(dt2[1])
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = hh, minutes = mm)
this_moment <- update(this_moment, hours = hday(), minutes = mm)
this_moment <- update(this_moment, hours =8, minutes = 1)
this_moment
?now
nyc <- now(tzone="America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart,hours = 17 ,minutes = 34)
depart
arrive <- nyc + hours(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive,tzone="Hong Kong")
arrive <- with_tz(arrive,tzone="Asia/Hong Kong")
arrive <- with_tz(arrive,"Asia/Hong Kong")
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008",tz="Asia/Singapore")
last_time <- mdy("June 17, 2008",tz="Singapore")
last_time
?interval
how_long < interval(last_time,arrive)
how_long <- interval(last_time,arrive)
as.period(how_long)
stopwatch()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","hid.csv")
hid <- read.csv("hid.csv")
names(hid)
hid$wgtp
?strsplit
strsplit(hid,"wgtp")
strsplit(names(hid),"wgtp")
strsplit(names(hid),"wgtp")[[123]]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","gdp.csv")
gdp <- read.csv("gdp.csv")
names(gdp)
head(gdp,1)
tail(gdp,1)
head(gdp)
head(gdp$X.2)
head(gdp$X.3)
head(gdp$X.3,1)
?gsub
hidnocommans <- gsub("\,",gdp$X.3)
hidnocommans <- gsub(",",gdp$X.3)
hidnocommans <- gsub(",",x=gdp$X.3)
hidnocommans <- gsub(",","",x=gdp$X.3)
hidnocommans
mean(hidnocommans)
mean(hidnocommans,ns.rm=TRUE)
mean(hidnocommans,na.rm=TRUE)
mean(nemeric(hidnocommans),ns.rm=TRUE)
mean(numeric(hidnocommans),ns.rm=TRUE)
?numeric
mean(as.numeric(hidnocommans),ns.rm=TRUE)
mean(as.numeric(hidnocommans),na.rm=TRUE)
n <- as.numeric(hidnocommans)
n <- as.numeric(hidnocommans,na.rm=TRUE)
n
mean(n,na.rm=TRUE)
gdp$X.3
gdp
names(gdp)
gdp$X.1
gdp$X.2
names(gdp)
gdp[gdp$X.1,]
gdp[gdp$X.1]
gdp[[X.1]]
gdp$X.1
gdp$Gross.domestic.product.2012
gdp$X.2
gdp$X.3
nocommas <- gsub("[1-9]+\,","",gdp$X.3)
nocommas <- gsub("[1-9]+,","",gdp$X.3)
nocommas
nocommas <- gsub(",","",gdp$X.3)
nocommas
gdp$X.3
nocommas <- sapply(nocommas.str_trim)
?sapply
nocommas <- lapply(nocommas.str_trim)
nocommas <- lapply(nocommas,FUN=str_trim)
library(stringr)
nocommas <- lapply(nocommas,FUN=str_trim)
nocommas
nocommas
num <- as.numeric(nocommas)
num
mean(num,na.rm=TRUE)
?grep
names(dgp)
names(gdp)
gdp[[3]]
gdp[[4]]
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
str(sampleTimes)
summary(sampleTimes)
head(sampleTimes)
dat < sapply(sampleTimes,function(x) {year(ymd(x)) == 2012})
dat <- sapply(sampleTimes,function(x) {year(ymd(x)) == 2012})
dat
head(sampleTimes)
y2012 <- sampleTimes[dat]
y2012
nrows(y2012)
length(y2012)
day(y2012[[1]])
day(y2012[[1]],label=TRUE)
day(y2012[1],label=TRUE)
day(y2012[[1]])
wday(y2012[1])
wday(y2012[1],label = TRUE)
mondays <- sapply(y2012,function(x) {wday(x) == 2})
mon <- y2012[mondays]
mon
length(mon)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","gdp1.csv")
gdp1 <- read.csv("gdp1.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv","edu.csv")
edu <- read.csv("edu.csv")
names(edu)
names(gdp)
gdp$X.2
gdp$X.1
gdp$X.2
edu$CountryCode
gdp$X.3
gdp$X.4
gdp$X.5
gdp$X.6
names(gdp)
gdp$X.7
gdp$X
edu$CountryCode
?match
matched <- match(gdp,edu,by.x="X",by.y="Countrycode",all=TRUE)
matched <- match(gdp,edu,by.x="X",by.y="Countrycode")
matched <- match(gdp,edu,by.x="X",by.y="CountryCode",all=TRUE)
matched <- match(gdp,edu,by.x="X",by.y="CountryCode")
matched <- merge(gdp,edu,by.x="X",by.y="CountryCode",all = TRUE)
macthed
matched
names(matched)
head(matched,10)
nrows(matched)
length(matched)
head(matched,40)
matched <- match(gdp,edu,by.x="X",by.y="CountryCode")
matched <- merge(gdp,edu,by.x="X",by.y="CountryCode")
matched
names(matched)
head(matched,1)
grep("year",names(matched))
grep("year",names(matched),label=TRUE)
head(matched,1)
head(matched$National.accounts.base.year,1)
head(matched$National.accounts.base.year)
head(matched,2)
grep("month",names(matched))
grep("date",names(matched))
grep("Date",names(matched))
summary(matched)
summary(gdp)
summary(edu)
summary(edu$Special.Notes)
grep("end of the fiscal year",edu$Special.Notes)
grep("fiscal year",edu$Special.Notes)
cyer <- grep("fiscal year",edu$Special.Notes)
cyer
cyer[1]
cyer[[1]]
summary(cyer)
class(cyer)
cyer <- grep("[fiscal year .* June]",edu$Special.Notes)
grep("[fiscal year .* June]",edu$Special.Notes)
edu$Special.Notes[grep("[fiscal year .* June]",edu$Special.Notes)]
edu$Special.Notes[grep("Fiscal year end: June",edu$Special.Notes)]
class(cyer)
head(matched$National.accounts.base.year)
grep("[end of the fiscal year is available]",edu$Special.Notes)
edu$Special.Notes[grep("[end of the fiscal year is available]",edu$Special.Notes)]
edu$Special.Notes[grep("end of the fiscal year is available",edu$Special.Notes)]
edu$Special.Notes[grep("fiscal year is available",edu$Special.Notes)]
edu$Special.Notes[grep("[fiscal year is available]",edu$Special.Notes)]
edu$Special.Notes[grep("Fiscal year end: June",edu$Special.Notes)]
names(edu)
grep("Finacial",names(edu))
grep("Year",names(edu))
grep("year",names(edu))
grep("year",names(gdp))
edu[which(!is.na(edu$National.accounts.base.year) & grep("Fiscal year end: June",edu$Special.Notes),]
edu(which(!is.na(edu$National.accounts.base.year) & grep("Fiscal year end: June",edu$Special.Notes))
)
edu[which(!is.na(edu$National.accounts.base.year) & grep("Fiscal year end: June",edu$Special.Notes))]
edu[which(!is.na(edu$National.accounts.base.year) & grep("Fiscal year end: June",edu$Special.Notes)),]
data <- edu[which(!is.na(edu$National.accounts.base.year) & grep("Fiscal year end: June",edu$Special.Notes)),]
data
sum(edu[which(!is.na(edu$National.accounts.base.year) & grep("Fiscal year end: June",edu$Special.Notes))])
edu
edu[which(!is.na(edu$National.accounts.base.year) & grep("Fiscal year end: June",edu$Special.Notes)),]
grep("year",names(gdp))
sum(edu[which(!is.na(edu$National.accounts.base.year) & grep("Fiscal year end: June",edu$Special.Notes))])
grep("Fiscal year end: June",edu$Special.Notes)
getwd()
setwd("Desktop/DataScience/courseera/class/UCI HAR Dataset")
getwd()
dir()
less README.txt
ls(
)
ls()
dir()
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
dir()
cd ..
features <- read.table("features.txt")
ls()
dir(
)
getwd(
)
ls(
)
activity_lables
activity_labels
activity_labels <- read.table("activity_labels.txt")
activity_labels
features
activity_labels[,2]
grep("*mean*|*std*",features[2])
grep(".*mean.*|.*std.*",features[2])
grep(".*mean.*|.*std.*",features[,2])
grep("*mean*|*std*",features[,2])
features[grep("*mean*|*std*",features[,2])]
features[grep("*mean*|*std*",features[,2]),]
features[grep("*.mean.*|.*std.*",features[,2]),]
train <- data.frame("train/X_train.txt","train/y_train.txt")
tarin
train
train <- data.frame(read.table("train/X_train.txt"),read.table("train/y_train.txt"))
train
head(train)
head(train,1)
x-train <- read.table("train/X_train.txt")
dir()
xtrain <- read.table("train/X_train.txt")
ytrain <- read.table("train/y_train.txt")
train <- cbind(x-train,y-train)
train <- cbind(xtrain,ytrain)
head(train,10)
str(train)
head(train,1)
summary(train)
summary(train,10)
train[[1]]
names(train)
ls()
ls()
xtest <- read.table("test/X_test.txt")
xtest <- read.table("test/X_test.txt")
ytest <- read.table("test/y_test.txt")
test <- cbind(xtest,ytest)
str(test)
trainAndtestData <- merge(tain,test)
trainAndtestData <- merge(train,test)
head(train,1)
names(train)
names(test)
train <- rbind(xtrain,ytrain)
train <- cbind(xtrain,ytrain)
summary(train,1)
summary(test,1)
test[1]
test[[1]]
test[[1,1]
]
test[1,1]
dim(test)
dim(train)
colnames(test)
xtrain <- read.table("train/X_train.txt")
xtrain
ytrain <- read.table("train/y_train.txt")
subtrain <- read.table("train/subject_train.txt")
train <- cbind(subtrain,ytrain,xtrain)
train
train[meanstdfeatures_lex]
meanstdfeatureslex <- grep("*mean*|*std*",features[,2])
train[meanstdfeatureslex]
xtest <- read.table("test/X_test.txt")[meanstdfeatureslex]
ytest <- read.table("test/y_test.txt")
subtest <- read.table("test/subject_test.txt")
test <- cbind(subtestytest,xtest)
test <- cbind(subtest,ytest,xtest)
data <- rbind(train,test)
xtest <- read.table("test/X_test.txt")[meanstdfeatureslex]
ytest <- read.table("test/y_test.txt")
ytest
subtest <- read.table("test/subject_test.txt")
test <- cbind(subtest,ytest,xtest)
str(test)
str(train)
ls()
ls()
xtrain <- read.table("train/X_train.txt")
ytrain <- read.table("train/y_train.txt")
subtrain <- read.table("train/subject_train.txt")
train <- cbind(subtrain,ytrain,xtrain)
xtest <- read.table("test/X_test.txt")
xtest <- read.table("test/X_test.txt")
ytest <- read.table("test/y_test.txt")
subtest <- read.table("test/subject_test.txt")
test <- cbind(subtest,ytest,xtest)
data <- rbind(train,test)
str(data)
dim(data)
names(data)
meanstdfeatures
activitylabels <- read.table("activity_labels.txt")
features <- read.table("features.txt")
meanstdfeatureslex <- grep(".*mean.*|.*std.*",features[,2])
meanstdfeatures <- features[meanstdfeatureslex,2]
meanstdfeatures
data
names(data)
colNames(data)
colnames(data)
rownames(data)
data[1]
data[,1]
data[1,1
]
summary(data)
str(data)
xtrain <- read.table("train/X_train.txt")
xtrain <- xtrain[meanstdfeatureslex]
xtrain
rm(list=ls())
xtest <- read.table("test/X_test.txt")
ls()
library(dplyr)
# 0.download data, if not there
if (!file.exists("UCI HAR Dataset")) {
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip","dataset.zip",method="curl")
unzip("dataset.zip")
}
#set working directory as "UCI HAR Dataset"
setwd("UCI HAR Dataset")
# 1.Merges the training and the test sets to create one data set
activitylabels <- read.table("activity_labels.txt")
features <- read.table("features.txt")
meanstdfeatureslex <- grep(".*mean.*|.*std.*",features[,2])
meanstdfeatures <- features[meanstdfeatureslex,2]
# create a table with x-train.txt & y-train.txt
xtrain <- read.table("train/X_train.txt")
xtrain <- xtrain[meanstdfeatureslex]
ytrain <- read.table("train/y_train.txt")
subtrain <- read.table("train/subject_train.txt")
train <- cbind(subtrain,ytrain,xtrain)
xtest <- read.table("test/X_test.txt")
xtest <- xtest[meanstdfeatureslex]
ytest <- read.table("test/y_test.txt")
subtest <- read.table("test/subject_test.txt")
test <- cbind(subtest,ytest,xtest)
data <- rbind(train,test)
data
str(data)
featuresWanted <- grep(".*mean.*|.*std.*", features[,2])
featuresWanted.names <- features[featuresWanted,2]
featuresWanted.names = gsub('-mean', 'Mean', featuresWanted.names)
featuresWanted.names = gsub('-std', 'Std', featuresWanted.names)
featuresWanted.names <- gsub('[-()]', '', featuresWanted.names)
featuresWanted.names
colnames(data) <- c("subject","activity",features[featuresWanted,2])
data
features[featuresWanted,2]
features[featuresWanted,3]
features[featuresWanted,1]
features[featuresWanted,2]
colnames(data) <- c("subject","activity",meanstdfeatures)
summary(data)
meanstdfeatures
colnames(data) <- c("subject","activity",meanstdfeatures)
data$activity <- factor(data$activity,levels = activitylabels[,1],labels = activitylabels[,2])
data
str(data)
data$subject <- as.factor(data$subject)
data.melted <- melt(data,id=("subject","activity"))
data.melted <- melt(data,id = c("subject","activity"))
data
summary(data)
str(data)
?melted
?melt
??melt
tidydata <- melt(data,id = c("subject","activity"))
library(rshape2)
library(reshape2)
install.packages("reshape2")
library(reshape2)
tidydata <- melt(data,id = c("subject","activity"))
tidydata
tidydata.mean <- dcast(tidydata,subject + activity ~ variable, mean)
tidydata.mean
write.table(tidydata.mean,"tidy.txt", row.names = FALSE, quote = FALSE)
dir()
write.table(tidydata.mean)
install.packages("reshape2")
library(reshape2)
# 0.download data, if not there
if (!file.exists("UCI HAR Dataset")) {
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip","dataset.zip",method="curl")
unzip("dataset.zip")
}
#set working directory as "UCI HAR Dataset"
setwd("UCI HAR Dataset")
# 1.Merges the training and the test sets to create one data set
activitylabels <- read.table("activity_labels.txt")
features <- read.table("features.txt")
meanstdfeatureslex <- grep(".*mean.*|.*std.*",features[,2])
meanstdfeatures <- features[meanstdfeatureslex,2]
# create a table with x-train.txt & y-train.txt
xtrain <- read.table("train/X_train.txt")
xtrain <- xtrain[meanstdfeatureslex]
ytrain <- read.table("train/y_train.txt")
subtrain <- read.table("train/subject_train.txt")
train <- cbind(subtrain,ytrain,xtrain)
xtest <- read.table("test/X_test.txt")
xtest <- xtest[meanstdfeatureslex]
ytest <- read.table("test/y_test.txt")
subtest <- read.table("test/subject_test.txt")
test <- cbind(subtest,ytest,xtest)
data <- rbind(train,test)
colnames(data) <- c("subject","activity",meanstdfeatures)
data$activity <- factor(data$activity,levels = activitylabels[,1],labels = activitylabels[,2])
data$subject <- as.factor(data$subject)
tidydata <- melt(data,id = c("subject","activity"))
tidydatamean <- dcast(tidydata,subject + activity ~ variable, mean)
write.table(tidydatamean, "tidydata.txt")
install.packages("reshape2")
dir()
dir()
cd ..
cd
?dcast
getwd()
dir()
setwd(../../../)
setwd("/Users/ramaayyagari/Desktop/DataScience/courseera/class")
getwd()
dir()
dir()
install.packages("reshape2")
library(reshape2)
# 0.download data, if not there
if (!file.exists("UCI HAR Dataset")) {
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip","dataset.zip",method="curl")
unzip("dataset.zip")
}
#set working directory as "UCI HAR Dataset"
setwd("UCI HAR Dataset")
# 1.Merges the training and the test sets to create one data set
activitylabels <- read.table("activity_labels.txt")
features <- read.table("features.txt")
meanstdfeatureslex <- grep(".*mean.*|.*std.*",features[,2])
meanstdfeatures <- features[meanstdfeatureslex,2]
# create a table with x-train.txt & y-train.txt
xtrain <- read.table("train/X_train.txt")
xtrain <- xtrain[meanstdfeatureslex]
ytrain <- read.table("train/y_train.txt")
subtrain <- read.table("train/subject_train.txt")
train <- cbind(subtrain,ytrain,xtrain)
xtest <- read.table("test/X_test.txt")
xtest <- xtest[meanstdfeatureslex]
ytest <- read.table("test/y_test.txt")
subtest <- read.table("test/subject_test.txt")
test <- cbind(subtest,ytest,xtest)
data <- rbind(train,test)
colnames(data) <- c("subject","activity",meanstdfeatures)
data$activity <- factor(data$activity,levels = activitylabels[,1],labels = activitylabels[,2])
data$subject <- as.factor(data$subject)
tidydata <- melt(data,id = c("subject","activity"))
tidydatamean <- dcast(tidydata,subject + activity ~ variable, mean)
write.table(tidydatamean, "tidydata.txt")
install.packages("reshape2")
dir()
